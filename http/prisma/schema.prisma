generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @default(autoincrement())
  email    String        @unique
  name     String?
  chats    Chat[]
  rooms    Room[]        // rooms created by this user
  members  RoomMember[]  // rooms this user has joined
}

model Room {
  id          Int           @id @default(autoincrement())
  name        String
  description String?       // optional subtitle like "your personal chef assistant"
  prompt      String?       // system message or GPT persona definition
  chats       Chat[]
  userId      Int?          // optional: for private rooms or room creators
  user        User?         @relation(fields: [userId], references: [id])
  members     RoomMember[]  // users who have joined this room
}

model RoomMember { //RoomMember is a user who has joined a room
  id     Int  @id @default(autoincrement())
  userId Int
  roomId Int  
  user   User @relation(fields: [userId], references: [id])
  room   Room @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId]) // prevent duplicate entries
}

model Chat {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  roomId    Int
  room      Room     @relation(fields: [roomId], references: [id])
}
